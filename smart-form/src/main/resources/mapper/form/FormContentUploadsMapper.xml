<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="smartform.form.mapper.FormContentUploadsMapper">

	<select id="getContentList" resultType="smartform.form.model.entity.FormContentUploadsEntity">
		SELECT
			`id`,
			`content_id`,
			`table_name`,
			`work_type`,
			`upload_type`,
			`line_id`,
			`url`,
			`file_name`,
			`suffix`,
			`size`,
			`created_at`,
			`modified_at`
		FROM
            ${dbTable}
        <where>
            <if test="contentId != null">
                `content_id` = #{contentId}
            </if>
            <if test="tableName != null">
                and `table_name` = #{tableName}
            </if>
            <if test="workType != null">
                and `work_type` = #{workType}
            </if>
            <if test="uploadType != null">
                and `upload_type` = #{uploadType}
            </if>
            <if test="lineId != null">
                and `line_id` = #{lineId}
            </if>
        </where>
        ORDER BY
            created_at ASC
	</select>

	<insert id="save">
		INSERT INTO ${dbTable} (
			`id`,
			`content_id`,
			`table_name`,
			<if test="workType != null">`work_type`, </if>
			<if test="uploadType != null">`upload_type`, </if>
			<if test="lineId != null">`line_id`, </if>
			`url`,
			`file_name`,
			`suffix`,
			`size`,
			`created_at`,
			`modified_at`
		)
		VALUES (
			#{id},
			#{contentId},
			#{tableName},
			<if test="workType != null">#{workType}, </if>
			<if test="uploadType != null">#{uploadType}, </if>
			<if test="lineId != null">#{lineId}, </if>
			#{url},
			#{fileName},
			#{suffix},
			#{size},
			#{createdAt},
			#{modifiedAt}
		)
	</insert>

	<insert id="batchSave">
        INSERT INTO ${dbTable} (
            `id`,
            `content_id`,
            `table_name`,
            `work_type`,
            `upload_type`,
            `line_id`,
            `url`,
            `file_name`,
            `suffix`,
            `size`,
            `created_at`,
            `modified_at`
        )
        VALUES
        <foreach collection="items" item="o" separator=",">
            (
            #{o.id},
            #{o.contentId},
            #{o.tableName},
            <choose>
                <when test="o.workType != null">
                    #{o.workType},
                </when>
                <otherwise>
                    0,
                </otherwise>
            </choose>
            <choose>
                <when test="o.uploadType!= null">
                    #{o.uploadType},
                </when>
                <otherwise>
                    0,
                </otherwise>
            </choose>
            <choose>
                <when test="o.lineId!= null">
                    #{o.lineId},
                </when>
                <otherwise>
                    0,
                </otherwise>
            </choose>
            #{o.url},
            #{o.fileName},
            #{o.suffix},
            #{o.size},
            #{o.createdAt},
            #{o.modifiedAt}
            )
        </foreach>
    </insert>

    <delete id="removeContent">
        DELETE
        FROM
        ${dbTable}
        <where>
            <if test="contentId != null">
                `content_id` = #{contentId}
            </if>
            <if test="tableName != null">
                and `table_name` = #{tableName}
            </if>
            <if test="workType != null">
                and `work_type` = #{workType}
            </if>
            <if test="uploadType != null">
                and `upload_type` = #{uploadType}
            </if>
            <if test="lineId != null">
                and `line_id` = #{lineId}
            </if>
        </where>
    </delete>

</mapper>
